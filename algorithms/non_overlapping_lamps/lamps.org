* Overlapping Lamps

There are some lamps placed on a coordinate line. Each of these lamps illuminate some space around it within a given radius. You are given the coordinates of the lamps on the line and the effective radius of each lamp's light.

In other words, you are given a two-dimensional array ~lamps~, where ~lamps[i]~ contains information about the i-th lamp.

- ~lamps[i][0]~ is an integer representing the lamp's coordinate.
- ~lamps[i][1]~ is an integer representing the lamp's effective radius. That means the i-th lamp illuminates everything in a range from ~lamps[i][0] - lamps[i][1]~ to ~lamps[i][0] + lamps[i][1]~ inclusive.

Your task is to find the number of integer coordinates that are illuminated by exactly ~1~ lamp.

** Example
For ~lamps = [[-2, 3], [2, 3], [2, 1]]~ the output should be ~solution(lamps) = 6~.
- The first lamp illuminates everything in the range ~[-5, 1]~.
- The second lamp illuminates everything in the range ~[-1, 5]~.
- The third lamp illuminates everything in the range ~[1, 3]~.
The points that are illuminated by exactly ~1~ lamp are ~[-5, -4, -3, -2, 4, 5]~, hence the answer is 6.


** Pseudocode solution
#+begin_src 
 let map = HashMap()

 for i in range(0, lamps.size):
   let left = lamp[i][0] - lamp[i][1]
   let right = lamp[i][0] + lamp[i][1]
   for c in range(left, right+1):
     map[c] += 1

 let count = 0;
 for i in map.values():
   count++

 return count
#+end_src

